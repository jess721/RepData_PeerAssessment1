diamonds$car2 <- cut(dimonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot2(diamonds, aes(depth,price))
g <- ggplot(diamonds, aes(depth,price))
g+geom_point(alpha(1/3))+facet_grid(cut ~ car2)
g+geom_point(alpha(1/3))+aes(facet_grid(cut ~ car2)
)
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(. ~ cut)
install.packages("myplclust")
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blu")
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmpa(dataMatrix, col = cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col= c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=10,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClassRepresentation,mean)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,ces=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-((svd1$u[,1]) * (svd1$d[1])) %*% svd1$v^t
a1<-((svd1$u[,1]) * (svd1$d[1])) %*% svd1$v
a1<-((svd1$u[,1]) * (svd1$d[1])) %*% t(svd1$v[,1])
a1<-((svd1$u[,1]) * (svd1$d[1])) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
)
a2 <- (svd1$u[,1:2] * diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- ssd$subject[1,]
sub1 <- ssd[subject = 1, ]
sub1 <- ssd[ssd$subject = 1, ]
sub1 <- ssd[ssd$subject=1,]
sub1 <- ssd[ssd$subject==1,]
head(sub())
head(sub1)
sub1 <- subset(ssd, subject == 1)
dim(dub1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- sub[,1:3]
mdist <- sub1[,1:3]
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub$activity))
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12]
)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12],maxCon))
maxCon
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkingDown,1:12],pch=19,ylab="Walkdown Cluster")
plot(kClust$centers[walkDown,1:12],pch=19,ylab="Walkdown Cluster")
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
setwd("~/Desktop/coursera/ExploratoryData/project2")
rm(list=ls())
ls()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
LimitCountyNEI <- subset(NEI, fips %in% c("24510","06037"))
table(LimitCountyNEI)
table(LimitCountyNEI$fips)
newFact <- factor(LimitCountyNEI$fips,levels = c("LA","Baltimore City"))
head(newFact)
table(newFact)
newFact <- factor(LimitCountyNEI$fips,levels = c("06037=LA","24510=Baltimore City"))
table(newFact)
?factor
newFact <- factor(LimitCountyNEI$fips,levels = c("06037","24510"), labels = c("LA","BC"))
newFact
table(newFact)
motorVehSCC <- SCC[grep("Motor Vehicle",SCC$Short.Name),]
LimitCountyNEI <- subset(NEI, fips %in% c("24510","06037"))
MotorVehNEIfilt <- sapply(LimitCountyNEI$SCC, function(x) x %in% motorVehSCC$SCC)
MotorVehNEI <- NEI[MotorVehNEIfilt,]
MotorVehNEI$year <- factor(MotorVehNEI$year)
MotorVehNEI$fips <- factor(MotorVehNEI$fips,levels = c("06037","24510"), labels = c("Los Angeles County","Baltimore City"))
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_boxplot()
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 4))
)
library(ggplot2)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_boxplot()
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 4))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_points()
+ ylab("Emissions from Motor Vehicle Sources")
##+ coord_cartesian(ylim = c(0, 4))
)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point()
+ ylab("Emissions from Motor Vehicle Sources")
##+ coord_cartesian(ylim = c(0, 4))
)
print(g
)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point()
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
##+ coord_cartesian(ylim = c(0, 4))
)
print(g)
LA <- subset(NEI, fips %in% c("06037"))
head(LA)
table(LimitCountyNEI$fips)
str(LimitCountyNEI)
levels(LimitCountyNEI$fips)
levels(MotorVehNEI$fips)
table(MotorVehNEI$fips)
View(MotorVehNEI)
rm(list=ls())
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
motorVehSCC <- SCC[grep("Motor Vehicle",SCC$Short.Name),]
LimitCountyNEI <- subset(NEI, fips %in% c("24510","06037"))
table(motorVehSCC)
table(motorVehSCC$SCC)
motorVehSCC
dim(motorVehSCC)
motorVehSCC
View(motorVehSCC)
View(motorVehSCC)
motorVehSCC$SCC
table(LimitCountyNEI$SCC)
otorVehNEIfilt <- sapply(LimitCountyNEI$SCC, function(x) x %in% motorVehSCC$SCC)
motorVehNEIfilt <- sapply(LimitCountyNEI$SCC, function(x) x %in% motorVehSCC$SCC)
rm(otorVehNEIfilt)
table(motorVehNEIfilt)
MotorVehNEI <- NEI[MotorVehNEIfilt,]
MotorVehNEI <- NEI[MotorVehNEIfilt,]
MotorVehNEI <- LimitCountyNEI[MotorVehNEIfilt,]
motorVehNEIfilt
MotorVehNEI <- LimitCountyNEI[motorVehNEIfilt,]
MotorVehNEI
LA <- NEI[NEI$fips == "06037"]
LA <- NEI[NEI$fips == "06037",]
LA$SCCname <- factor(LA$SCC,levels = SCC$SCC, labels = SCC$Short.Name)
View(SCC)
View(SCC)
LA$SCCname <- factor(LA$SCC,levels = SCC$SCC, labels = SCC$Short.Name)
?match
library(plyr)
?join
join(LA,SCC,by=SCC)
join(LA,SCC,by="SCC")
head(LA)
newLA <- join(LA,SCC,by="SCC")
head(newLA)
table(newLA$EI.Sector)
table(newLA$Short.Name)
motorVehSCC$EI.Sector
levels)motorVehSCC$EI.Sector)
levels(motorVehSCC$EI.Sector)
?grep
motorVehSCC
levels(SCC$EI.Sector)
motorVehSCC <- SCC[grep("Mobile - On-Road",SCC$EI.Sector),]
LimitCountyNEI <- subset(NEI, fips %in% c("24510","06037"))
MotorVehNEIfilt <- sapply(LimitCountyNEI$SCC, function(x) x %in% motorVehSCC$SCC)
MotorVehNEI <- LimitCountyNEI[MotorVehNEIfilt,]
MotorVehNEI$year <- factor(MotorVehNEI$year)
MotorVehNEI$fips <- factor(MotorVehNEI$fips,levels = c("06037","24510"), labels = c("Los Angeles County","Baltimore City"))
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point()
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
+ coord_cartesian(ylim = c(0, 4))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point()
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
##+ coord_cartesian(ylim = c(0, 4))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
##+ coord_cartesian(ylim = c(0, 4))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
+ coord_cartesian(ylim = c(0, 100))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
+ coord_cartesian(ylim = c(0, 100))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", se=FALSE, col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 100))
)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
+ coord_cartesian(ylim = c(0, 100))
)
print(g)
MotorVehNEI <- LimitCountyNEI[MotorVehNEIfilt,]
MotorVehNEI$fips <- factor(MotorVehNEI$fips,levels = c("06037","24510"), labels = c("Los Angeles County","Baltimore City"))
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", se=FALSE, col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 100))
)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ ylab("Emissions from Motor Vehicle Sources")
+ geom_smooth(method='lm')
+ coord_cartesian(ylim = c(0, 100))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", se=FALSE, col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 50))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 50))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ geom_smooth(method="lm", col=fips)
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 50))
)
source("plot6.R")
plot6()
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips, fill=FALSE))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 50))
)
print(g)
g <- (ggplot(MotorVehNEI,aes(x = year, y = Emissions, color = fips))
+ geom_point(alpha=0.3)
+ facet_grid(.~fips)
+ geom_smooth(method="lm", col="blue")
+ ylab("Emissions from Motor Vehicle Sources")
+ coord_cartesian(ylim = c(0, 50))
+ theme(legend.position="none")
)
print(g)
source("plot6.R")
plot6()
swirl()
library(swirl)
swirl()
?
select
?info
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
sum(x1)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0, ((pm0$State.Code==36)&(pm0$county.site %in% both)))
cnt0<-subset(pm0, pm0$State.Code==36&pm0$county.site %in% both)
cnt0<-subset(pm0, State.Code==36&county.site %in% both)
cnt1<-subset(pm1, State.Code==36&county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 $ Site.ID == 2008 )
pm0sub <- subset(cnt0, cnt0$County.Code == 63 $ cnt0$Site.ID == 2008 )
pm0sub <- subset(cnt0, cnt0$County.Code = 63 $ cnt0$Site.ID = 2008 )
pm0sub<-subset(cnt0, County.Code==63& Site.ID == 2008)
pm1sub<-subset(cnt1, County.Code==63& Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0, x0sub,pch=20)
abline(median(x0sub),lwd =2,na.rm=TRUE)
abline(median(x0sub,na.rm=TRUE),lwd =2)
abline(1)
?abline
abline(median(x0sub,na.rm=TRUE),0,lwd =2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg,plot(rep(1,52),points(rep(2,52),mrg[,3])))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(2,52),mrg[,2],rep(2,53),mrg[,3])
segments(rep(2,52),mrg[,2],rep(2,52),mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
download.packages("knitr")
download.packages(knitr
)
install.packages("knitr")
install.packages("markdown")
rm(list=ls())
setwd("~Desktop/coursera/ReproducibleResearch/RepData_PeerAssessment1")
setwd("~/Desktop/coursera/ReprocibleResearch/RepData_PeerAssessment1")
ls
data <- read.csv("activity.csv")
head(data)
dim(data)
str(data)
table(data$"state.fips")
table(data$steps)
table(data$date)
dailySteps<-summarize(data)
?summmarize
?summarise
library(dplyr)
?summarize
data %>% group_by(date) %>% summarize(dailySteps = sum(steps))
oct8 <- data[data$date == '2012-10-08',]
oct8
dailySteps <- data %>% group_by(date) %>% summarize(dailySteps = sum(steps))
dialyStpes
dialySteps
dailySteps
dailySteps$dailySteps
mean(dailySteps)
?mean
mean(dailySteps,na.rm = TRUE)
mean(dailySteps$dailySteps,na.rm = TRUE)
library(ggplot2)
qplot(dailySteps,data=dailySteps)
qplot(date,data=dailySteps)
?as.Date
dailySteps$date <- as.Date(dailySteps$date, "%Y-%m-%d")
qplot(date,data=dailySteps)
qplot(date,dailySteps,data=dailySteps)
qplot(date,data=dailySteps)
qplot(date,dailySteps,data=dailySteps,geom="histogram")
ggplot(dailysteps, aes(x=date, weights=dailySteps)) +
geom_histogram())
plot<-ggplot(dailysteps, aes(x=date, weights=dailySteps) +
geom_histogram())
plot<-ggplot(dailySteps, aes(x=date, weights=dailySteps) +
geom_histogram())
plot<-ggplot(dailySteps, aes(x=date, weights=dailySteps) + geom_histogram())
?qplot
plot <- ggplot(dailysteps, aes(x=date, weight=dailySteps) + geom_histogram())
plot <- ggplot(dailySteps, aes(x=date, weight=dailySteps) + geom_histogram())
plot <- ggplot(dailySteps, aes(x=date, weight=dailySteps)) + geom_histogram()
print(plot)
?library
?mean
?library
update.packages()
?ggplot
dim(dailySteps)
dailySteps
head(data)
table(data$interval)
